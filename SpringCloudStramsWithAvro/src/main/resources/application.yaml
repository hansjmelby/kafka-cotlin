spring:
  kafka:
    properties:
      bootstrap-servers: localhost:9092
  cloud:
    stream:
      function:
        definition: consumeSensor;produceSensor;streamSensor;
      bindings:
        produceSensor-out-0:
          destination: sensor-avro
          producer:
            use-native-encoding: true
            partitionCount: 2
        streamSensor-in-0:
          destination: sensor-avro
          group: kotlinSensoravroOutputter
        consumeSensor-in-0:
          destination: sensor-avro
          group: kotlinSensoravroOutputter2
          content-type: application/*+avro
      kafka:
        binder:
          consumer-properties:
            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            schema.registry.url: http://localhost:8081
            specific.avro.reader: true
        bindings:
          produceSensor-out-0:
            producer:
              configuration:
                schema.registry.url: http://localhost:8081
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        streams:
          binder:
            application-id: SensorStreamReader
            configuration:
              schema.registry.url: http://localhost:8081
              specific.avro.reader: true

